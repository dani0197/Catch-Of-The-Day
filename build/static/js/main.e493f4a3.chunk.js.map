{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Inventory.js","sample-fishes.js","components/Fish.js","base.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","updateFish","index","onChange","deleteFish","Inventory","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","base","firebase","initializeApp","apiKey","authDomain","databaseURL","Rebase","createClass","database","App","state","Date","now","setState","sampleFishes","params","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","syncState","context","console","log","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.e493f4a3.chunk.js","sourcesContent":["export function formatPrice(cents) {\r\n  return (cents / 100).toLocaleString(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\"\r\n  });\r\n}\r\n\r\nexport function rando(arr) {\r\n  return arr[Math.floor(Math.random() * arr.length)];\r\n}\r\n\r\nexport function slugify(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, \"-\")\r\n    .replace(/[^\\w-]+/g, \"\")\r\n    .replace(/--+/g, \"-\")\r\n    .replace(/^-+/, \"\")\r\n    .replace(/-+$/, \"\");\r\n}\r\n\r\nexport function getFunName() {\r\n  const adjectives = [\r\n    \"adorable\",\r\n    \"beautiful\",\r\n    \"clean\",\r\n    \"drab\",\r\n    \"elegant\",\r\n    \"fancy\",\r\n    \"glamorous\",\r\n    \"handsome\",\r\n    \"long\",\r\n    \"magnificent\",\r\n    \"old-fashioned\",\r\n    \"plain\",\r\n    \"quaint\",\r\n    \"sparkling\",\r\n    \"ugliest\",\r\n    \"unsightly\",\r\n    \"angry\",\r\n    \"bewildered\",\r\n    \"clumsy\",\r\n    \"defeated\",\r\n    \"embarrassed\",\r\n    \"fierce\",\r\n    \"grumpy\",\r\n    \"helpless\",\r\n    \"itchy\",\r\n    \"jealous\",\r\n    \"lazy\",\r\n    \"mysterious\",\r\n    \"nervous\",\r\n    \"obnoxious\",\r\n    \"panicky\",\r\n    \"repulsive\",\r\n    \"scary\",\r\n    \"thoughtless\",\r\n    \"uptight\",\r\n    \"worried\"\r\n  ];\r\n\r\n  const nouns = [\r\n    \"women\",\r\n    \"men\",\r\n    \"children\",\r\n    \"teeth\",\r\n    \"feet\",\r\n    \"people\",\r\n    \"leaves\",\r\n    \"mice\",\r\n    \"geese\",\r\n    \"halves\",\r\n    \"knives\",\r\n    \"wives\",\r\n    \"lives\",\r\n    \"elves\",\r\n    \"loaves\",\r\n    \"potatoes\",\r\n    \"tomatoes\",\r\n    \"cacti\",\r\n    \"foci\",\r\n    \"fungi\",\r\n    \"nuclei\",\r\n    \"syllabuses\",\r\n    \"analyses\",\r\n    \"diagnoses\",\r\n    \"oases\",\r\n    \"theses\",\r\n    \"crises\",\r\n    \"phenomena\",\r\n    \"criteria\",\r\n    \"data\"\r\n  ];\r\n\r\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\r\n}\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends React.Component {\r\n  myInput = React.createRef();\r\n  static propTypes = {\r\n    history: propTypes.object,\r\n  };\r\n\r\n  goToStore = event => {\r\n    // 1. Stop the form from submitting\r\n    event.preventDefault();\r\n    // 2. get the text from that input\r\n    const storeName = this.myInput.current.value;\r\n    // 3. Change the page to /store/whatever-they-entered\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        <h2>Please Enter A Store</h2>\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          required\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store →</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nconst Header = props => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Catch\r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">Of</span>\r\n        <span className=\"the\">The</span>\r\n      </span>\r\n      Day\r\n    </h1>\r\n    <h3 className=\"tagline\">\r\n      <span>{props.tagline}</span>\r\n    </h3>\r\n  </header>\r\n);\r\n\r\nHeader.propTypes = {\r\n  tagline: propTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Order extends React.Component {\r\n  static propTypes = {\r\n    fishes: propTypes.object,\r\n    order: propTypes.object,\r\n    removeFromOrder: propTypes.func,\r\n  };\r\n\r\n  renderOrder = key => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n    const isAvailable = fish && fish.status === 'available';\r\n    const transitionOptions = {\r\n      classNames: 'order',\r\n      key,\r\n      timeout: { enter: 500, exit: 500 },\r\n    };\r\n    // Make sure the fish is loaded before we continue!\r\n    if (!fish) return null;\r\n\r\n    if (!isAvailable) {\r\n      return (\r\n        <CSSTransition {...transitionOptions}>\r\n          <li key={key}>\r\n            Sorry {fish ? fish.name : 'fish'} is no longer available\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    }\r\n    return (\r\n      <CSSTransition {...transitionOptions}>\r\n        <li key={key}>\r\n          <span>\r\n            <TransitionGroup component=\"span\" className=\"count\">\r\n              <CSSTransition\r\n                classNames=\"count\"\r\n                key={count}\r\n                timeout={{ enter: 500, exit: 500 }}\r\n              >\r\n                <span>{count}</span>\r\n              </CSSTransition>\r\n            </TransitionGroup>\r\n            lbs {fish.name}\r\n            {formatPrice(count * fish.price)}\r\n            <button onClick={() => this.props.removeFromOrder(key)}>\r\n              &times;\r\n            </button>\r\n          </span>\r\n        </li>\r\n      </CSSTransition>\r\n    );\r\n  };\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      const isAvailable = fish && fish.status === 'available';\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal;\r\n    }, 0);\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Order</h2>\r\n        <TransitionGroup component=\"ul\" className=\"order\">\r\n          {orderIds.map(this.renderOrder)}\r\n        </TransitionGroup>\r\n        <div className=\"total\">\r\n          Total:\r\n          <strong>{formatPrice(total)}</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nclass AddFishForm extends React.Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  static propTypes = {\r\n    addFish: propTypes.func,\r\n  };\r\n  createFish = event => {\r\n    // 1.  stop the form from submitting\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: parseFloat(this.priceRef.current.value),\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value,\r\n    };\r\n    this.props.addFish(fish);\r\n    // refresh the form\r\n    event.currentTarget.reset();\r\n  };\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          type=\"text\"\r\n          placeholder=\"Price\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n        <input\r\n          name=\"image\"\r\n          ref={this.imageRef}\r\n          type=\"text\"\r\n          placeholder=\"Image\"\r\n        />\r\n        <button type=\"submit\">+ Add Fish</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nclass EditFishForm extends React.Component {\r\n  handleChange = event => {\r\n    // update that fish\r\n    // 1. take a copy of the current fish\r\n    const updatedFish = {\r\n      ...this.props.fish,\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    };\r\n    this.props.updateFish(this.props.index, updatedFish);\r\n  };\r\n\r\n  static propTypes = {\r\n    fish: propTypes.shape({\r\n      image: propTypes.string,\r\n      name: propTypes.string,\r\n      desc: propTypes.string,\r\n      status: propTypes.string,\r\n      price: propTypes.number,\r\n    }),\r\n    index: propTypes.string,\r\n    updateFish: propTypes.func,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"fish-edit\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"price\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.price}\r\n        />\r\n        <select\r\n          type=\"text\"\r\n          name=\"status\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.status}\r\n        >\r\n          <option value=\"available\">Fresh!</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea\r\n          name=\"desc\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.desc}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"image\"\r\n          onChange={this.handleChange}\r\n          value={this.props.fish.image}\r\n        />\r\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\r\n          Remove Fish\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditFishForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\n\r\nclass Inventory extends React.Component {\r\n  static propTypes = {\r\n    fishes: PropTypes.object,\r\n    updateFish: PropTypes.func,\r\n    deleteFish: PropTypes.func,\r\n    loadSampleFishes: PropTypes.func,\r\n    addFish: PropTypes.func,\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Inventory</h2>\r\n        {Object.keys(this.props.fishes).map(key => (\r\n          <EditFishForm\r\n            key={key}\r\n            index={key}\r\n            fish={this.props.fishes[key]}\r\n            updateFish={this.props.updateFish}\r\n            deleteFish={this.props.deleteFish}\r\n          />\r\n        ))}\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishes\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\r\nconst fishes = {\r\n  fish1: {\r\n    name: \"Pacific Halibut\",\r\n    image: \"/images/hali.jpg\",\r\n    desc:\r\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\r\n    price: 1724,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish2: {\r\n    name: \"Lobster\",\r\n    image: \"/images/lobster.jpg\",\r\n    desc:\r\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\r\n    price: 3200,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish3: {\r\n    name: \"Sea Scallops\",\r\n    image: \"/images/scallops.jpg\",\r\n    desc:\r\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\r\n    price: 1684,\r\n    status: \"unavailable\"\r\n  },\r\n\r\n  fish4: {\r\n    name: \"Mahi Mahi\",\r\n    image: \"/images/mahi.jpg\",\r\n    desc:\r\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\r\n    price: 1129,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish5: {\r\n    name: \"King Crab\",\r\n    image: \"/images/crab.jpg\",\r\n    desc:\r\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\r\n    price: 4234,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish6: {\r\n    name: \"Atlantic Salmon\",\r\n    image: \"/images/salmon.jpg\",\r\n    desc:\r\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\r\n    price: 1453,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish7: {\r\n    name: \"Oysters\",\r\n    image: \"/images/oysters.jpg\",\r\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\r\n    price: 2543,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish8: {\r\n    name: \"Mussels\",\r\n    image: \"/images/mussels.jpg\",\r\n    desc:\r\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\r\n    price: 425,\r\n    status: \"available\"\r\n  },\r\n\r\n  fish9: {\r\n    name: \"Jumbo Prawns\",\r\n    image: \"/images/prawns.jpg\",\r\n    desc:\r\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\r\n    price: 2250,\r\n    status: \"available\"\r\n  }\r\n};\r\n\r\nexport default fishes;\r\n","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { formatPrice } from '../helpers';\r\n\r\nclass Fish extends React.Component {\r\n  handleClick = () => {\r\n    this.props.addToOrder(this.props.index);\r\n  };\r\n\r\n  static propTypes = {\r\n    details: propTypes.shape({\r\n      image: propTypes.string,\r\n      name: propTypes.string,\r\n      desc: propTypes.string,\r\n      status: propTypes.string,\r\n      price: propTypes.number,\r\n    }),\r\n    addToOrder: propTypes.func,\r\n  };\r\n\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === 'available';\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">\r\n          {name}\r\n          {name}\r\n          <span className=\"price\">{formatPrice(price)}</span>\r\n        </h3>\r\n        <p>{desc}</p>\r\n        <button disabled={!isAvailable} onClick={this.handleClick}>\r\n          {isAvailable ? 'Add To Order' : 'Sold Out'}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: 'AIzaSyDA_ad7Bdg2drBwq_6gaZvqgnuMAkqE7XQ',\r\n  authDomain: 'catch-of-the-day-1f930.firebaseapp.com',\r\n  databaseURL: 'https://catch-of-the-day-1f930.firebaseio.com',\r\n});\r\n\r\nconst base = Rebase.createClass(firebase.database());\r\n\r\n// this is a named export\r\nexport { firebaseApp };\r\n\r\n// this is a defalut export\r\nexport default base;\r\n","import React from 'react';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\nimport base from '../base';\r\nimport propTypes from 'prop-types';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    fishes: {},\r\n    order: {},\r\n  };\r\n\r\n  static propTypes = {\r\n    match: propTypes.object,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { params } = this.props.match;\r\n    // first reinstate our localStorage\r\n    const localStorageRef = localStorage.getItem(params.storeId);\r\n    if (localStorageRef) {\r\n      this.setState({ order: JSON.parse(localStorageRef) });\r\n    }\r\n\r\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\r\n      context: this,\r\n      state: 'fishes',\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(this.state.order);\r\n    localStorage.setItem(\r\n      this.props.match.params.storeId,\r\n      JSON.stringify(this.state.order)\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.ref);\r\n  }\r\n\r\n  addFish = fish => {\r\n    // 1. Take a copy of the existing state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. Add our new fish to that fishes variable\r\n    fishes[`fish${Date.now()}`] = fish;\r\n    // 3. Set the new fishes object to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  updateFish = (key, updatedFish) => {\r\n    // 1.take a copy of the current state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2.update that state\r\n    fishes[key] = updatedFish;\r\n    // 3. set that to state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  deleteFish = key => {\r\n    // 1. take a copy of the state\r\n    const fishes = { ...this.state.fishes };\r\n    // 2. update the state\r\n    fishes[key] = null;\r\n    // 3. update state\r\n    this.setState({ fishes });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({ fishes: sampleFishes });\r\n  };\r\n\r\n  addToOrder = key => {\r\n    // 1. take a copy of state\r\n    const order = { ...this.state.order };\r\n    // 2. Either add to the order, or update the number in our order\r\n    order[key] = order[key] + 1 || 1;\r\n    // 3. Call setState to update our state object\r\n    this.setState({ order });\r\n  };\r\n\r\n  removeFromOrder = key => {\r\n    const order = { ...this.state.order };\r\n    delete order[key];\r\n    this.setState({ order });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Fresh Seafood Market\" />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key => (\r\n              <Fish\r\n                key={key}\r\n                index={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order\r\n          fishes={this.state.fishes}\r\n          order={this.state.order}\r\n          removeFromOrder={this.removeFromOrder}\r\n        />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          updateFish={this.updateFish}\r\n          deleteFish={this.deleteFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n          fishes={this.state.fishes}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <h2>Not Found!?!!!!1111</h2>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport StorePicker from \"./StorePicker\";\r\nimport App from \"./App\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={StorePicker} />\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport Router from './components/Router';\r\nimport './css/style.css';\r\n\r\nrender(<Router />, document.querySelector('#main'));\r\n"],"sourceRoot":""}